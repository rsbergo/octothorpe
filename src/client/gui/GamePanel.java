package client.gui;

import java.util.List;

import javax.swing.GroupLayout;

import client.event.Event;
import client.event.Subject;

/**
 * The GUI panel that coordinates interactions with the player.
 * Generates move events.
 */
public class GamePanel extends ContentPanel
{
    private MapPanel mapPanel = new MapPanel();                       // map
    private PlayerListPanel playersListPanel = new PlayerListPanel(); // list of players

    /**
     * Default constructor.
     * Initializes the components of the game panel and defines its layout.
     */
    public GamePanel()
    {
        super("GamePanel");
        registerSubject(Subject.PlayerListUpdated);
        registerSubject(Subject.MapUpdated);
        registerSubject(Subject.Move);
        
        bindEvents();
        createLayout();
    }

    @Override
    public void processEvent(Event event)
    {
        // TODO: Review, maybe game panel is a proxy
        if (event.getSubject() == Subject.PlayerListUpdated)
            notify(event);
        if (event.getSubject() == Subject.MapUpdated)
            notify(event);
        if (event.getSubject() == Subject.Move)
            notify(event);
    }

    @Override
    public List<Subject> getEventsProduced()
    {
        return List.of(Subject.Move);
    }

    @Override
    public List<Subject> getSubjectsConsumed()
    {
        return List.of(Subject.PlayerListUpdated, Subject.MapUpdated);
    }

    private void bindEvents()
    {
        subscribe(playersListPanel, playersListPanel.getSubjectsConsumed());    // subscribe playersList to events generated here
        playersListPanel.subscribe(this, playersListPanel.getEventsProduced()); // subscribe to events generated by playersList

        subscribe(mapPanel, mapPanel.getSubjectsConsumed());
        mapPanel.subscribe(this, mapPanel.getEventsProduced());
    }

    // Defines the layout for the game panel
    private void createLayout()
    {
        GroupLayout layoutManager = new GroupLayout(content);
        layoutManager.setAutoCreateContainerGaps(true);
        layoutManager.setAutoCreateGaps(true);

        layoutManager.setHorizontalGroup(layoutManager.createSequentialGroup()
            .addComponent(playersListPanel.getContent(), GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(mapPanel.getContent(), GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
        );

        layoutManager.setVerticalGroup(layoutManager.createParallelGroup()
            .addComponent(playersListPanel.getContent(), GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
            .addComponent(mapPanel.getContent(), GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
        );

        content.setLayout(layoutManager);
    }
}
