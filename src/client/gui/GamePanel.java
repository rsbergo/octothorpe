package client.gui;

import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.SwingConstants;

import client.event.Event;
import client.event.Subject;
import client.game.Player;

/**
 * The GUI panel that coordinates interactions with the player.
 * Generates move events.
 */
public class GamePanel extends ContentPanel
{
    private MapPanel mapPanel = null;                                 // map
    private PlayerListPanel playersListPanel = new PlayerListPanel(); // list of players
    private MessagePanel messagePanel = new MessagePanel();           // message area
    private ItemTakenPanel itemTakenPanel = new ItemTakenPanel();     // log of items taken

    /**
     * Default constructor.
     * Initializes the components of the game panel and defines its layout.
     */
    public GamePanel(Player currentPlayer)
    {
        super("GamePanel");
        registerSubject(Subject.PlayerListUpdated);
        registerSubject(Subject.MapUpdated);
        registerSubject(Subject.Move);
        registerSubject(Subject.MessageReceived);
        registerSubject(Subject.SendMessage);
        registerSubject(Subject.ItemTaken);
        registerSubject(Subject.PlayerUpdated);
        registerSubject(Subject.FogOfWar);
        
        mapPanel = new MapPanel(currentPlayer);
        bindEvents();
        createLayout();
    }

    @Override
    public synchronized void processEvent(Event event)
    {
        // GamePanel is functioning as a Proxy, but it must also be a ContentPanel, and we can only inherit from one class...
        notify(event);
    }

    @Override
    public List<Subject> getEventsProduced()
    {
        return List.of(Subject.Move, Subject.SendMessage, Subject.FogOfWar);
    }

    @Override
    public List<Subject> getSubjectsConsumed()
    {
        return List.of(Subject.PlayerListUpdated, Subject.MapUpdated, Subject.MessageReceived, Subject.ItemTaken, Subject.PlayerUpdated);
    }

    private void bindEvents()
    {
        subscribe(playersListPanel, playersListPanel.getSubjectsConsumed());    // subscribe playersList to events generated here
        playersListPanel.subscribe(this, playersListPanel.getEventsProduced()); // subscribe to events generated by playersList

        subscribe(mapPanel, mapPanel.getSubjectsConsumed());
        mapPanel.subscribe(this, mapPanel.getEventsProduced());

        subscribe(messagePanel, messagePanel.getSubjectsConsumed());
        messagePanel.subscribe(this, messagePanel.getEventsProduced());

        subscribe(itemTakenPanel, itemTakenPanel.getSubjectsConsumed());
        itemTakenPanel.subscribe(this, itemTakenPanel.getEventsProduced());
    }

    // Defines the layout for the game panel
    private void createLayout()
    {
        GroupLayout layoutManager = new GroupLayout(content);
        layoutManager.setAutoCreateContainerGaps(true);
        layoutManager.setAutoCreateGaps(true);

        layoutManager.setHorizontalGroup(layoutManager.createSequentialGroup()
            .addGroup(layoutManager.createParallelGroup(Alignment.CENTER, true)
                .addComponent(playersListPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(itemTakenPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(messagePanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
            )
            .addComponent(mapPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
        );

        layoutManager.setVerticalGroup(layoutManager.createParallelGroup()
            .addGroup(layoutManager.createSequentialGroup()
                .addComponent(playersListPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
                .addComponent(itemTakenPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
                .addComponent(messagePanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
            )
            .addComponent(mapPanel.getContent(), GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE)
        );

        layoutManager.linkSize(SwingConstants.HORIZONTAL, playersListPanel.getContent(), itemTakenPanel.getContent(), messagePanel.getContent());
        content.setLayout(layoutManager);
    }
}
